paths:
  /api/users:
    get:
      summary: Obtiene todos los usuarios - Utilizando patrón DTO (filtra Id, first_name, last_name, email, role)
      tags:
        - Usuarios
      responses:
        "200":
          description: Lista de usuarios obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "500":
          description: Error interno del servidor
    delete:
      summary: Elimina usuarios inactivos que no se hayan registrado o abierto sesion en los último 2 días.
      tags:
        - Usuarios
      responses:
        "200":
          description: Usuarios inactivos eliminados con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de éxito
        "500":
          description: Error interno del servidor
  /api/users/{id}:
    get:
      summary: Obtiene un usuario por ID
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario que se está solicitando
          schema:
            type: string
      responses:
        "200":
          description: Usuario obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: El usuario con ID X no existe.
        "500":
          description: Error interno del servidor
    put:
      summary: Actualiza un usuario por ID
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario que se quiere actualizar
          schema:
            type: string
      requestBody:
        description: Datos del usuario a actualizar
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        "200":
          description: Usuario actualizado con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  userEditado:
                    $ref: '#/components/schemas/User'
        "400":
          description: ID inválido o faltan datos obligatorios
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Descripción del error
                  detalle:
                    type: string
                    description: Detalles adicionales del error
        "404":
          description: Usuario no encontrado
        "500":
          description: Error interno del servidor
    delete:
      summary: Elimina un usuario por ID
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario que se quiere eliminar
          schema:
            type: string
      responses:
        "200":
          description: Usuario eliminado con éxito
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    description: Mensaje de éxito
                  resultado:
                    $ref: '#/components/schemas/User'  # O ajusta el tipo según lo que devuelva tu método deleteUser
        "404":
          description: Usuario no encontrado
        "500":
          description: Error interno del servidor
  /api/users/{id}/documents:
    post:
      summary: Sube un documento según id del usuario, usando MULTER.
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario al que se le está subiendo el documento
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                foto:
                  type: string
                  format: binary
      responses:
        "200":
          description: Documento subido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de éxito
                  user:
                    $ref: '#/components/schemas/User'
        "500":
          description: Error interno del servidor
  /api/users/{id}/documents/products:
    post:
      summary: Sube un documento relacionado a un producto según id del usuario, usando MULTER.
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario al que se le está subiendo el documento del producto
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                foto:
                  type: string
                  format: binary
      responses:
        "200":
          description: Producto subido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de éxito
                  user:
                    $ref: '#/components/schemas/User'
        "500":
          description: Error interno del servidor
  /api/users/{id}/documents/profiles:
    post:
      summary: Sube un documento relacionado a un perfil según id del usuario, usando MULTER.
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario al que se le está subiendo el documento de perfil
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                foto:
                  type: string
                  format: binary
      responses:
        "200":
          description: Profile subido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de éxito
                  user:
                    $ref: '#/components/schemas/User'
        "500":
          description: Error interno del servidor
  /api/users/{id}/documents/identificacion:
    post:
      summary: Sube un documento relacionado a la identificación de un usuario, según id del usuario, usando MULTER.
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario al que se le está subiendo el documento de identificación
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                foto:
                  type: string
                  format: binary
      responses:
        "200":
          description: Identificación subida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de éxito
                  user:
                    $ref: '#/components/schemas/User'
        "500":
          description: Error interno del servidor
  /api/users/{id}/documents/domicilio:
    post:
      summary: Sube un documento relacionado a al domicilio de un usuario, según id del usuario, usando MULTER.
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario al que se le está subiendo el comprobante de domicilio
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                foto:
                  type: string
                  format: binary
      responses:
        "200":
          description: Comprobante de domicilio subido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de éxito
                  user:
                    $ref: '#/components/schemas/User'
        "500":
          description: Error interno del servidor
  /api/users/{id}/documents/cuenta:
    post:
      summary: Sube un documento relacionado a al cuenta de un usuario, según id del usuario, usando MULTER.
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario al que se le está subiendo el estado de cuenta
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                foto:
                  type: string
                  format: binary
      responses:
        "200":
          description: Estado de cuenta subido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de éxito
                  user:
                    $ref: '#/components/schemas/User'
        "500":
          description: Error interno del servidor
  /api/users/premium/{id}:
    get:
      summary: Obtiene el role - users o premium - de un usuario 
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario cuyo rol se está solicitando
          schema:
            type: string
      responses:
        "200":
          description: Obtiene el rol del usuario premium según el ID proporcionado
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    description: ID del usuario
                  userRole:
                    type: string
                    description: Rol del usuario (premium)
        "400":
          description: ID inválido
        "404":
          description: Usuario no encontrado
        "500":
          description: Error interno del servidor
  /api/users/premium/{id}/changeRole:
    post:
      summary: Cambia el rol del usuario según el ID proporcionado. Aclaración, para role premium tiene que tener subido archivos de identificación, cuenta y domicilio.
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario cuyo rol se quiere cambiar
          schema:
            type: string
      responses:
        "200":
          description: Cambia el rol del usuario premium según el ID proporcionado
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    description: ID del usuario
                  newRole:
                    type: string
                    description: Nuevo rol del usuario (premium o user)
        "400":
          description: ID inválido o usuario no ha terminado de procesar documentación
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Descripción del error
                  detalle:
                    type: string
                    description: Detalles adicionales del error
                  missingDocuments:
                    type: array
                    description: Lista de documentos faltantes (solo en caso de documentación incompleta)
        "404":
          description: Usuario no encontrado
        "500":
          description: Error interno del servidor
components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: ID del usuario
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico del usuario
        age:
          type: integer
          description: Edad del usuario
        password:
          type: string
          description: Contraseña del usuario
        cart:
          type: string
          description: ID del carrito asociado al usuario
        role:
          type: string
          description: Rol del usuario (user, premium, etc.)
        documents:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Nombre del documento
              reference:
                type: string
                description: Referencia del documento
        last_connection:
          type: string
          format: date
          description: Última conexión del usuario
    UpdateUserRequest:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        age:
          type: number
        password:
          type: string
        role:
          type: string
          enum: ["user", "premium"]
      required:
        - first_name
        - last_name
        - email
        - age
        - cart
        - role
      example:
        first_name: "John"
        last_name: "Doe"
        email: "john.doe@example.com"
        age: 30
        password: "newpassword"        
        role: "user"